import ArenaBrawl from './ArenaBrawl.js';
import ArenaBrawlMode from './ArenaBrawlMode.js';
import { expect, expectTypeOf, test } from 'vitest';
import type { ArenaBrawlRunes } from '../../../Types/Player.js';

test('ArenaBrawl', () => {
  const data = new ArenaBrawl({ stats: 'meow' });
  expect(data).toBeInstanceOf(ArenaBrawl);
  expectTypeOf(data).toEqualTypeOf<ArenaBrawl>();
  expect(data.coins).toBeDefined();
  expect(data.coins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.coins).toEqualTypeOf<number>();
  expect(data.coinsSpent).toBeDefined();
  expect(data.coinsSpent).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.coinsSpent).toEqualTypeOf<number>();
  expect(data.wins).toBeDefined();
  expect(data.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.wins).toEqualTypeOf<number>();
  expect(data.keys).toBeDefined();
  expect(data.keys).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.keys).toEqualTypeOf<number>();
  expect(data.chests).toBeDefined();
  expect(data.chests).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.chests).toEqualTypeOf<number>();
  expect(data.rune).toBeDefined();
  expectTypeOf(data.rune).toEqualTypeOf<ArenaBrawlRunes | 'None'>();
  expect(data['1v1']).toBeDefined();
  expectTypeOf(data['1v1']).toEqualTypeOf<ArenaBrawlMode>();
  expect(data['2v2']).toBeDefined();
  expectTypeOf(data['2v2']).toEqualTypeOf<ArenaBrawlMode>();
  expect(data['4v4']).toBeDefined();
  expectTypeOf(data['4v4']).toEqualTypeOf<ArenaBrawlMode>();
});
