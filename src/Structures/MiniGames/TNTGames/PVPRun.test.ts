import PVPRun from './PVPRun.js';
import { expect, expectTypeOf, test } from 'vitest';
import type { ColorString } from '../../../Types/Color.js';

test('PVPRun', () => {
  const data = new PVPRun({ stats: 'meow' });
  expect(data).toBeDefined();
  expect(data).toBeInstanceOf(PVPRun);
  expectTypeOf(data).toEqualTypeOf<PVPRun>();
  expect(data.wins).toBeDefined();
  expect(data.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.wins).toEqualTypeOf<number>();
  expect(data.bestTime).toBeDefined();
  expect(data.bestTime).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.bestTime).toEqualTypeOf<number>();
  expect(data.kills).toBeDefined();
  expect(data.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.kills).toEqualTypeOf<number>();
  expect(data.deaths).toBeDefined();
  expect(data.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.deaths).toEqualTypeOf<number>();
  expect(data.KDR).toBeDefined();
  expect(data.KDR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.KDR).toEqualTypeOf<number>();
  expect(data.regeneration).toBeDefined();
  expect(data.regeneration).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.regeneration).toEqualTypeOf<number>();
  expect(data.notoriety).toBeDefined();
  expect(data.notoriety).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.notoriety).toEqualTypeOf<number>();
  expect(data.fortitude).toBeDefined();
  expect(data.fortitude).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.fortitude).toEqualTypeOf<number>();
  expect(data.doubleJumps).toBeDefined();
  expect(data.doubleJumps).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleJumps).toEqualTypeOf<number>();
  expect(data.prefixColor).toBeDefined();
  expectTypeOf(data.prefixColor).toEqualTypeOf<ColorString | 'Rainbow'>();
});
