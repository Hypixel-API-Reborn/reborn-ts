import { expect, expectTypeOf, test } from 'vitest';
import BedWars, {
  BedWarsBeds,
  BedWarsCollectedItems,
  BedwarsDreamMode,
  BedwarsDreamStats,
  BedwarsMode,
  BedWarsPracticeStats,
  BedWarsPrestige,
  getExpForLevel
} from './BedWars';

test('BedWars (getExpForLevel)', () => {
  expect(getExpForLevel(0)).toBe(0);
  expectTypeOf(getExpForLevel(0)).toEqualTypeOf<number>();
  expect(getExpForLevel(1)).toBe(500);
  expectTypeOf(getExpForLevel(1)).toEqualTypeOf<number>();
  expect(getExpForLevel(2)).toBe(1000);
  expectTypeOf(getExpForLevel(2)).toEqualTypeOf<number>();
  expect(getExpForLevel(3)).toBe(2000);
  expectTypeOf(getExpForLevel(3)).toEqualTypeOf<number>();
  expect(getExpForLevel(4)).toBe(3500);
  expectTypeOf(getExpForLevel(4)).toEqualTypeOf<number>();
  expect(getExpForLevel(5)).toBe(5000);
  expectTypeOf(getExpForLevel(5)).toEqualTypeOf<number>();
  expect(getExpForLevel(6)).toBe(5000);
  expectTypeOf(getExpForLevel(6)).toEqualTypeOf<number>();
});

test('BedWars', () => {
  const data = new BedWars({ stats: 'meow' });
  expect(data.tokens).toBeDefined();
  expect(data.tokens).greaterThanOrEqual(0);
  expectTypeOf(data.tokens).toEqualTypeOf<number>();
  expect(data.level).toBeDefined();
  expect(data.level).greaterThanOrEqual(0);
  expectTypeOf(data.level).toEqualTypeOf<number>();
  expect(data.experience).toBeDefined();
  expect(data.experience).greaterThanOrEqual(0);
  expectTypeOf(data.experience).toEqualTypeOf<number>();
  expect(data.prestige).toBeDefined();
  expectTypeOf(data.prestige).toEqualTypeOf<BedWarsPrestige>();
  expect(data.playedGames).toBeDefined();
  expect(data.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.playedGames).toEqualTypeOf<number>();
  expect(data.wins).toBeDefined();
  expect(data.wins).greaterThanOrEqual(0);
  expectTypeOf(data.wins).toEqualTypeOf<number>();
  expect(data.winstreak).toBeDefined();
  expect(data.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.winstreak).toEqualTypeOf<number>();
  expect(data.kills).toBeDefined();
  expect(data.kills).greaterThanOrEqual(0);
  expectTypeOf(data.kills).toEqualTypeOf<number>();
  expect(data.finalKills).toBeDefined();
  expect(data.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.finalKills).toEqualTypeOf<number>();
  expect(data.losses).toBeDefined();
  expect(data.losses).greaterThanOrEqual(0);
  expectTypeOf(data.losses).toEqualTypeOf<number>();
  expect(data.deaths).toBeDefined();
  expect(data.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.deaths).toEqualTypeOf<number>();
  expect(data.finalDeaths).toBeDefined();
  expect(data.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.finalDeaths).toEqualTypeOf<number>();
  expect(data.collectedItemsTotal).toBeDefined();
  expectTypeOf(data.collectedItemsTotal).toEqualTypeOf<BedWarsCollectedItems>();
  expect(data.collectedItemsTotal.iron).toBeDefined();
  expect(data.collectedItemsTotal.iron).greaterThanOrEqual(0);
  expectTypeOf(data.collectedItemsTotal.iron).toEqualTypeOf<number>();
  expect(data.collectedItemsTotal.gold).toBeDefined();
  expect(data.collectedItemsTotal.gold).greaterThanOrEqual(0);
  expectTypeOf(data.collectedItemsTotal.gold).toEqualTypeOf<number>();
  expect(data.collectedItemsTotal.diamond).toBeDefined();
  expect(data.collectedItemsTotal.diamond).greaterThanOrEqual(0);
  expectTypeOf(data.collectedItemsTotal.diamond).toEqualTypeOf<number>();
  expect(data.collectedItemsTotal.emerald).toBeDefined();
  expect(data.collectedItemsTotal.emerald).greaterThanOrEqual(0);
  expectTypeOf(data.collectedItemsTotal.emerald).toEqualTypeOf<number>();
  expect(data.beds).toBeDefined();
  expectTypeOf(data.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.KDRatio).toBeDefined();
  expect(data.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.KDRatio).toEqualTypeOf<number>();
  expect(data.finalKDRatio).toBeDefined();
  expect(data.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.finalKDRatio).toEqualTypeOf<number>();
  expect(data.WLRatio).toBeDefined();
  expect(data.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.WLRatio).toEqualTypeOf<number>();
  expect(data.solo).toBeDefined();
  expectTypeOf(data.solo).toEqualTypeOf<BedwarsMode>();
  expect(data.solo.winstreak).toBeDefined();
  expect(data.solo.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.solo.winstreak).toEqualTypeOf<number>();
  expect(data.solo.playedGames).toBeDefined();
  expect(data.solo.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.solo.playedGames).toEqualTypeOf<number>();
  expect(data.solo.kills).toBeDefined();
  expect(data.solo.kills).greaterThanOrEqual(0);
  expectTypeOf(data.solo.kills).toEqualTypeOf<number>();
  expect(data.solo.deaths).toBeDefined();
  expect(data.solo.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.solo.deaths).toEqualTypeOf<number>();
  expect(data.solo.wins).toBeDefined();
  expect(data.solo.wins).greaterThanOrEqual(0);
  expectTypeOf(data.solo.wins).toEqualTypeOf<number>();
  expect(data.solo.losses).toBeDefined();
  expect(data.solo.losses).greaterThanOrEqual(0);
  expectTypeOf(data.solo.losses).toEqualTypeOf<number>();
  expect(data.solo.finalKills).toBeDefined();
  expect(data.solo.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.solo.finalKills).toEqualTypeOf<number>();
  expect(data.solo.finalDeaths).toBeDefined();
  expect(data.solo.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.solo.finalDeaths).toEqualTypeOf<number>();
  expect(data.solo.beds).toBeDefined();
  expectTypeOf(data.solo.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.solo.beds.lost).toBeDefined();
  expect(data.solo.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.solo.beds.lost).toEqualTypeOf<number>();
  expect(data.solo.beds.broken).toBeDefined();
  expect(data.solo.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.solo.beds.broken).toEqualTypeOf<number>();
  expect(data.solo.beds.BLRatio).toBeDefined();
  expect(data.solo.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.solo.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.solo.KDRatio).toBeDefined();
  expect(data.solo.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.solo.KDRatio).toEqualTypeOf<number>();
  expect(data.solo.WLRatio).toBeDefined();
  expect(data.solo.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.solo.WLRatio).toEqualTypeOf<number>();
  expect(data.solo.finalKDRatio).toBeDefined();
  expect(data.solo.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.solo.finalKDRatio).toEqualTypeOf<number>();
  expect(data.doubles).toBeDefined();
  expectTypeOf(data.doubles).toEqualTypeOf<BedwarsMode>();
  expect(data.doubles.winstreak).toBeDefined();
  expect(data.doubles.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.doubles.winstreak).toEqualTypeOf<number>();
  expect(data.doubles.playedGames).toBeDefined();
  expect(data.doubles.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.doubles.playedGames).toEqualTypeOf<number>();
  expect(data.doubles.kills).toBeDefined();
  expect(data.doubles.kills).greaterThanOrEqual(0);
  expectTypeOf(data.doubles.kills).toEqualTypeOf<number>();
  expect(data.doubles.deaths).toBeDefined();
  expect(data.doubles.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.doubles.deaths).toEqualTypeOf<number>();
  expect(data.doubles.wins).toBeDefined();
  expect(data.doubles.wins).greaterThanOrEqual(0);
  expectTypeOf(data.doubles.wins).toEqualTypeOf<number>();
  expect(data.doubles.losses).toBeDefined();
  expect(data.doubles.losses).greaterThanOrEqual(0);
  expectTypeOf(data.doubles.losses).toEqualTypeOf<number>();
  expect(data.doubles.finalKills).toBeDefined();
  expect(data.doubles.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.doubles.finalKills).toEqualTypeOf<number>();
  expect(data.doubles.finalDeaths).toBeDefined();
  expect(data.doubles.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.doubles.finalDeaths).toEqualTypeOf<number>();
  expect(data.doubles.beds).toBeDefined();
  expectTypeOf(data.doubles.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.doubles.beds.lost).toBeDefined();
  expect(data.doubles.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubles.beds.lost).toEqualTypeOf<number>();
  expect(data.doubles.beds.broken).toBeDefined();
  expect(data.doubles.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubles.beds.broken).toEqualTypeOf<number>();
  expect(data.doubles.beds.BLRatio).toBeDefined();
  expect(data.doubles.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubles.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.doubles.KDRatio).toBeDefined();
  expect(data.doubles.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.doubles.KDRatio).toEqualTypeOf<number>();
  expect(data.doubles.WLRatio).toBeDefined();
  expect(data.doubles.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.doubles.WLRatio).toEqualTypeOf<number>();
  expect(data.doubles.finalKDRatio).toBeDefined();
  expect(data.doubles.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.doubles.finalKDRatio).toEqualTypeOf<number>();
  expect(data.threes).toBeDefined();
  expectTypeOf(data.threes).toEqualTypeOf<BedwarsMode>();
  expect(data.threes.winstreak).toBeDefined();
  expect(data.threes.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.threes.winstreak).toEqualTypeOf<number>();
  expect(data.threes.playedGames).toBeDefined();
  expect(data.threes.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.threes.playedGames).toEqualTypeOf<number>();
  expect(data.threes.kills).toBeDefined();
  expect(data.threes.kills).greaterThanOrEqual(0);
  expectTypeOf(data.threes.kills).toEqualTypeOf<number>();
  expect(data.threes.deaths).toBeDefined();
  expect(data.threes.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.threes.deaths).toEqualTypeOf<number>();
  expect(data.threes.wins).toBeDefined();
  expect(data.threes.wins).greaterThanOrEqual(0);
  expectTypeOf(data.threes.wins).toEqualTypeOf<number>();
  expect(data.threes.losses).toBeDefined();
  expect(data.threes.losses).greaterThanOrEqual(0);
  expectTypeOf(data.threes.losses).toEqualTypeOf<number>();
  expect(data.threes.finalKills).toBeDefined();
  expect(data.threes.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.threes.finalKills).toEqualTypeOf<number>();
  expect(data.threes.finalDeaths).toBeDefined();
  expect(data.threes.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.threes.finalDeaths).toEqualTypeOf<number>();
  expect(data.threes.beds).toBeDefined();
  expectTypeOf(data.threes.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.threes.beds.lost).toBeDefined();
  expect(data.threes.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.threes.beds.lost).toEqualTypeOf<number>();
  expect(data.threes.beds.broken).toBeDefined();
  expect(data.threes.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.threes.beds.broken).toEqualTypeOf<number>();
  expect(data.threes.beds.BLRatio).toBeDefined();
  expect(data.threes.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.threes.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.threes.KDRatio).toBeDefined();
  expect(data.threes.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.threes.KDRatio).toEqualTypeOf<number>();
  expect(data.threes.WLRatio).toBeDefined();
  expect(data.threes.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.threes.WLRatio).toEqualTypeOf<number>();
  expect(data.threes.finalKDRatio).toBeDefined();
  expect(data.threes.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.threes.finalKDRatio).toEqualTypeOf<number>();
  expect(data.fours).toBeDefined();
  expectTypeOf(data.fours).toEqualTypeOf<BedwarsMode>();
  expect(data.fours.winstreak).toBeDefined();
  expect(data.fours.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.fours.winstreak).toEqualTypeOf<number>();
  expect(data.fours.playedGames).toBeDefined();
  expect(data.fours.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.fours.playedGames).toEqualTypeOf<number>();
  expect(data.fours.kills).toBeDefined();
  expect(data.fours.kills).greaterThanOrEqual(0);
  expectTypeOf(data.fours.kills).toEqualTypeOf<number>();
  expect(data.fours.deaths).toBeDefined();
  expect(data.fours.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.fours.deaths).toEqualTypeOf<number>();
  expect(data.fours.wins).toBeDefined();
  expect(data.fours.wins).greaterThanOrEqual(0);
  expectTypeOf(data.fours.wins).toEqualTypeOf<number>();
  expect(data.fours.losses).toBeDefined();
  expect(data.fours.losses).greaterThanOrEqual(0);
  expectTypeOf(data.fours.losses).toEqualTypeOf<number>();
  expect(data.fours.finalKills).toBeDefined();
  expect(data.fours.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.fours.finalKills).toEqualTypeOf<number>();
  expect(data.fours.finalDeaths).toBeDefined();
  expect(data.fours.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.fours.finalDeaths).toEqualTypeOf<number>();
  expect(data.fours.beds).toBeDefined();
  expectTypeOf(data.fours.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.fours.beds.lost).toBeDefined();
  expect(data.fours.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.fours.beds.lost).toEqualTypeOf<number>();
  expect(data.fours.beds.broken).toBeDefined();
  expect(data.fours.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.fours.beds.broken).toEqualTypeOf<number>();
  expect(data.fours.beds.BLRatio).toBeDefined();
  expect(data.fours.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.fours.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.fours.KDRatio).toBeDefined();
  expect(data.fours.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.fours.KDRatio).toEqualTypeOf<number>();
  expect(data.fours.WLRatio).toBeDefined();
  expect(data.fours.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.fours.WLRatio).toEqualTypeOf<number>();
  expect(data.fours.finalKDRatio).toBeDefined();
  expect(data.fours.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.fours.finalKDRatio).toEqualTypeOf<number>();
  expect(data['4v4']).toBeDefined();
  expectTypeOf(data['4v4']).toEqualTypeOf<BedwarsMode>();
  expect(data['4v4'].winstreak).toBeDefined();
  expect(data['4v4'].winstreak).greaterThanOrEqual(0);
  expectTypeOf(data['4v4'].winstreak).toEqualTypeOf<number>();
  expect(data['4v4'].playedGames).toBeDefined();
  expect(data['4v4'].playedGames).greaterThanOrEqual(0);
  expectTypeOf(data['4v4'].playedGames).toEqualTypeOf<number>();
  expect(data['4v4'].kills).toBeDefined();
  expect(data['4v4'].kills).greaterThanOrEqual(0);
  expectTypeOf(data['4v4'].kills).toEqualTypeOf<number>();
  expect(data['4v4'].deaths).toBeDefined();
  expect(data['4v4'].deaths).greaterThanOrEqual(0);
  expectTypeOf(data['4v4'].deaths).toEqualTypeOf<number>();
  expect(data['4v4'].wins).toBeDefined();
  expect(data['4v4'].wins).greaterThanOrEqual(0);
  expectTypeOf(data['4v4'].wins).toEqualTypeOf<number>();
  expect(data['4v4'].losses).toBeDefined();
  expect(data['4v4'].losses).greaterThanOrEqual(0);
  expectTypeOf(data['4v4'].losses).toEqualTypeOf<number>();
  expect(data['4v4'].finalKills).toBeDefined();
  expect(data['4v4'].finalKills).greaterThanOrEqual(0);
  expectTypeOf(data['4v4'].finalKills).toEqualTypeOf<number>();
  expect(data['4v4'].finalDeaths).toBeDefined();
  expect(data['4v4'].finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data['4v4'].finalDeaths).toEqualTypeOf<number>();
  expect(data['4v4'].beds).toBeDefined();
  expectTypeOf(data['4v4'].beds).toEqualTypeOf<BedWarsBeds>();
  expect(data['4v4'].beds.lost).toBeDefined();
  expect(data['4v4'].beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data['4v4'].beds.lost).toEqualTypeOf<number>();
  expect(data['4v4'].beds.broken).toBeDefined();
  expect(data['4v4'].beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data['4v4'].beds.broken).toEqualTypeOf<number>();
  expect(data['4v4'].beds.BLRatio).toBeDefined();
  expect(data['4v4'].beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data['4v4'].beds.BLRatio).toEqualTypeOf<number>();
  expect(data['4v4'].KDRatio).toBeDefined();
  expect(data['4v4'].KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data['4v4'].KDRatio).toEqualTypeOf<number>();
  expect(data['4v4'].WLRatio).toBeDefined();
  expect(data['4v4'].WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data['4v4'].WLRatio).toEqualTypeOf<number>();
  expect(data['4v4'].finalKDRatio).toBeDefined();
  expect(data['4v4'].finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data['4v4'].finalKDRatio).toEqualTypeOf<number>();
  expect(data.dream).toBeDefined();
  expectTypeOf(data.dream).toEqualTypeOf<BedwarsDreamStats>();
  expect(data.dream.ultimate).toBeDefined();
  expectTypeOf(data.dream.ultimate).toEqualTypeOf<BedwarsDreamMode>();
  expect(data.dream.ultimate.doubles).toBeDefined();
  expectTypeOf(data.dream.ultimate.doubles).toEqualTypeOf<BedwarsMode>();
  expect(data.dream.ultimate.doubles.winstreak).toBeDefined();
  expect(data.dream.ultimate.doubles.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.doubles.winstreak).toEqualTypeOf<number>();
  expect(data.dream.ultimate.doubles.playedGames).toBeDefined();
  expect(data.dream.ultimate.doubles.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.doubles.playedGames).toEqualTypeOf<number>();
  expect(data.dream.ultimate.doubles.kills).toBeDefined();
  expect(data.dream.ultimate.doubles.kills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.doubles.kills).toEqualTypeOf<number>();
  expect(data.dream.ultimate.doubles.deaths).toBeDefined();
  expect(data.dream.ultimate.doubles.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.doubles.deaths).toEqualTypeOf<number>();
  expect(data.dream.ultimate.doubles.wins).toBeDefined();
  expect(data.dream.ultimate.doubles.wins).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.doubles.wins).toEqualTypeOf<number>();
  expect(data.dream.ultimate.doubles.losses).toBeDefined();
  expect(data.dream.ultimate.doubles.losses).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.doubles.losses).toEqualTypeOf<number>();
  expect(data.dream.ultimate.doubles.finalKills).toBeDefined();
  expect(data.dream.ultimate.doubles.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.doubles.finalKills).toEqualTypeOf<number>();
  expect(data.dream.ultimate.doubles.finalDeaths).toBeDefined();
  expect(data.dream.ultimate.doubles.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.doubles.finalDeaths).toEqualTypeOf<number>();
  expect(data.dream.ultimate.doubles.beds).toBeDefined();
  expectTypeOf(data.dream.ultimate.doubles.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.dream.ultimate.doubles.beds.lost).toBeDefined();
  expect(data.dream.ultimate.doubles.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.doubles.beds.lost).toEqualTypeOf<number>();
  expect(data.dream.ultimate.doubles.beds.broken).toBeDefined();
  expect(data.dream.ultimate.doubles.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.doubles.beds.broken).toEqualTypeOf<number>();
  expect(data.dream.ultimate.doubles.beds.BLRatio).toBeDefined();
  expect(data.dream.ultimate.doubles.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.doubles.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.dream.ultimate.doubles.KDRatio).toBeDefined();
  expect(data.dream.ultimate.doubles.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.doubles.KDRatio).toEqualTypeOf<number>();
  expect(data.dream.ultimate.doubles.WLRatio).toBeDefined();
  expect(data.dream.ultimate.doubles.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.doubles.WLRatio).toEqualTypeOf<number>();
  expect(data.dream.ultimate.doubles.finalKDRatio).toBeDefined();
  expect(data.dream.ultimate.doubles.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.doubles.finalKDRatio).toEqualTypeOf<number>();
  expect(data.dream.ultimate.fours).toBeDefined();
  expectTypeOf(data.dream.ultimate.fours).toEqualTypeOf<BedwarsMode>();
  expect(data.dream.ultimate.fours.winstreak).toBeDefined();
  expect(data.dream.ultimate.fours.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.fours.winstreak).toEqualTypeOf<number>();
  expect(data.dream.ultimate.fours.playedGames).toBeDefined();
  expect(data.dream.ultimate.fours.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.fours.playedGames).toEqualTypeOf<number>();
  expect(data.dream.ultimate.fours.kills).toBeDefined();
  expect(data.dream.ultimate.fours.kills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.fours.kills).toEqualTypeOf<number>();
  expect(data.dream.ultimate.fours.deaths).toBeDefined();
  expect(data.dream.ultimate.fours.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.fours.deaths).toEqualTypeOf<number>();
  expect(data.dream.ultimate.fours.wins).toBeDefined();
  expect(data.dream.ultimate.fours.wins).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.fours.wins).toEqualTypeOf<number>();
  expect(data.dream.ultimate.fours.losses).toBeDefined();
  expect(data.dream.ultimate.fours.losses).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.fours.losses).toEqualTypeOf<number>();
  expect(data.dream.ultimate.fours.finalKills).toBeDefined();
  expect(data.dream.ultimate.fours.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.fours.finalKills).toEqualTypeOf<number>();
  expect(data.dream.ultimate.fours.finalDeaths).toBeDefined();
  expect(data.dream.ultimate.fours.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.fours.finalDeaths).toEqualTypeOf<number>();
  expect(data.dream.ultimate.fours.beds).toBeDefined();
  expectTypeOf(data.dream.ultimate.fours.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.dream.ultimate.fours.beds.lost).toBeDefined();
  expect(data.dream.ultimate.fours.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.fours.beds.lost).toEqualTypeOf<number>();
  expect(data.dream.ultimate.fours.beds.broken).toBeDefined();
  expect(data.dream.ultimate.fours.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.fours.beds.broken).toEqualTypeOf<number>();
  expect(data.dream.ultimate.fours.beds.BLRatio).toBeDefined();
  expect(data.dream.ultimate.fours.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.fours.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.dream.ultimate.fours.KDRatio).toBeDefined();
  expect(data.dream.ultimate.fours.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.fours.KDRatio).toEqualTypeOf<number>();
  expect(data.dream.ultimate.fours.WLRatio).toBeDefined();
  expect(data.dream.ultimate.fours.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.fours.WLRatio).toEqualTypeOf<number>();
  expect(data.dream.ultimate.fours.finalKDRatio).toBeDefined();
  expect(data.dream.ultimate.fours.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.ultimate.fours.finalKDRatio).toEqualTypeOf<number>();
  expect(data.dream.rush).toBeDefined();
  expectTypeOf(data.dream.rush).toEqualTypeOf<BedwarsDreamMode>();
  expect(data.dream.rush.doubles).toBeDefined();
  expectTypeOf(data.dream.rush.doubles).toEqualTypeOf<BedwarsMode>();
  expect(data.dream.rush.doubles.winstreak).toBeDefined();
  expect(data.dream.rush.doubles.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.winstreak).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.playedGames).toBeDefined();
  expect(data.dream.rush.doubles.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.playedGames).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.kills).toBeDefined();
  expect(data.dream.rush.doubles.kills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.kills).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.deaths).toBeDefined();
  expect(data.dream.rush.doubles.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.deaths).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.wins).toBeDefined();
  expect(data.dream.rush.doubles.wins).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.wins).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.losses).toBeDefined();
  expect(data.dream.rush.doubles.losses).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.losses).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.finalKills).toBeDefined();
  expect(data.dream.rush.doubles.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.finalKills).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.finalDeaths).toBeDefined();
  expect(data.dream.rush.doubles.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.finalDeaths).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.beds).toBeDefined();
  expectTypeOf(data.dream.rush.doubles.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.dream.rush.doubles.beds.lost).toBeDefined();
  expect(data.dream.rush.doubles.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.beds.lost).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.beds.broken).toBeDefined();
  expect(data.dream.rush.doubles.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.beds.broken).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.beds.BLRatio).toBeDefined();
  expect(data.dream.rush.doubles.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.KDRatio).toBeDefined();
  expect(data.dream.rush.doubles.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.KDRatio).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.WLRatio).toBeDefined();
  expect(data.dream.rush.doubles.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.WLRatio).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.finalKDRatio).toBeDefined();
  expect(data.dream.rush.doubles.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.finalKDRatio).toEqualTypeOf<number>();
  expect(data.dream.rush.fours).toBeDefined();
  expectTypeOf(data.dream.rush.fours).toEqualTypeOf<BedwarsMode>();
  expect(data.dream.rush.fours.winstreak).toBeDefined();
  expect(data.dream.rush.fours.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.winstreak).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.playedGames).toBeDefined();
  expect(data.dream.rush.fours.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.playedGames).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.kills).toBeDefined();
  expect(data.dream.rush.fours.kills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.kills).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.deaths).toBeDefined();
  expect(data.dream.rush.fours.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.deaths).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.wins).toBeDefined();
  expect(data.dream.rush.fours.wins).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.wins).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.losses).toBeDefined();
  expect(data.dream.rush.fours.losses).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.losses).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.finalKills).toBeDefined();
  expect(data.dream.rush.fours.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.finalKills).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.finalDeaths).toBeDefined();
  expect(data.dream.rush.fours.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.finalDeaths).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.beds).toBeDefined();
  expectTypeOf(data.dream.rush.fours.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.dream.rush.fours.beds.lost).toBeDefined();
  expect(data.dream.rush.fours.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.beds.lost).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.beds.broken).toBeDefined();
  expect(data.dream.rush.fours.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.beds.broken).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.beds.BLRatio).toBeDefined();
  expect(data.dream.rush.fours.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.KDRatio).toBeDefined();
  expect(data.dream.rush.fours.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.KDRatio).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.WLRatio).toBeDefined();
  expect(data.dream.rush.fours.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.WLRatio).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.finalKDRatio).toBeDefined();
  expect(data.dream.rush.fours.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.finalKDRatio).toEqualTypeOf<number>();
  expect(data.dream.rush).toBeDefined();
  expectTypeOf(data.dream.rush).toEqualTypeOf<BedwarsDreamMode>();
  expect(data.dream.rush.doubles).toBeDefined();
  expectTypeOf(data.dream.rush.doubles).toEqualTypeOf<BedwarsMode>();
  expect(data.dream.rush.doubles.winstreak).toBeDefined();
  expect(data.dream.rush.doubles.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.winstreak).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.playedGames).toBeDefined();
  expect(data.dream.rush.doubles.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.playedGames).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.kills).toBeDefined();
  expect(data.dream.rush.doubles.kills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.kills).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.deaths).toBeDefined();
  expect(data.dream.rush.doubles.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.deaths).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.wins).toBeDefined();
  expect(data.dream.rush.doubles.wins).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.wins).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.losses).toBeDefined();
  expect(data.dream.rush.doubles.losses).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.losses).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.finalKills).toBeDefined();
  expect(data.dream.rush.doubles.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.finalKills).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.finalDeaths).toBeDefined();
  expect(data.dream.rush.doubles.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.finalDeaths).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.beds).toBeDefined();
  expectTypeOf(data.dream.rush.doubles.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.dream.rush.doubles.beds.lost).toBeDefined();
  expect(data.dream.rush.doubles.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.beds.lost).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.beds.broken).toBeDefined();
  expect(data.dream.rush.doubles.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.beds.broken).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.beds.BLRatio).toBeDefined();
  expect(data.dream.rush.doubles.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.KDRatio).toBeDefined();
  expect(data.dream.rush.doubles.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.KDRatio).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.WLRatio).toBeDefined();
  expect(data.dream.rush.doubles.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.WLRatio).toEqualTypeOf<number>();
  expect(data.dream.rush.doubles.finalKDRatio).toBeDefined();
  expect(data.dream.rush.doubles.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.doubles.finalKDRatio).toEqualTypeOf<number>();
  expect(data.dream.rush.fours).toBeDefined();
  expectTypeOf(data.dream.rush.fours).toEqualTypeOf<BedwarsMode>();
  expect(data.dream.rush.fours.winstreak).toBeDefined();
  expect(data.dream.rush.fours.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.winstreak).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.playedGames).toBeDefined();
  expect(data.dream.rush.fours.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.playedGames).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.kills).toBeDefined();
  expect(data.dream.rush.fours.kills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.kills).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.deaths).toBeDefined();
  expect(data.dream.rush.fours.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.deaths).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.wins).toBeDefined();
  expect(data.dream.rush.fours.wins).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.wins).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.losses).toBeDefined();
  expect(data.dream.rush.fours.losses).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.losses).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.finalKills).toBeDefined();
  expect(data.dream.rush.fours.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.finalKills).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.finalDeaths).toBeDefined();
  expect(data.dream.rush.fours.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.finalDeaths).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.beds).toBeDefined();
  expectTypeOf(data.dream.rush.fours.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.dream.rush.fours.beds.lost).toBeDefined();
  expect(data.dream.rush.fours.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.beds.lost).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.beds.broken).toBeDefined();
  expect(data.dream.rush.fours.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.beds.broken).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.beds.BLRatio).toBeDefined();
  expect(data.dream.rush.fours.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.KDRatio).toBeDefined();
  expect(data.dream.rush.fours.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.KDRatio).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.WLRatio).toBeDefined();
  expect(data.dream.rush.fours.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.WLRatio).toEqualTypeOf<number>();
  expect(data.dream.rush.fours.finalKDRatio).toBeDefined();
  expect(data.dream.rush.fours.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.rush.fours.finalKDRatio).toEqualTypeOf<number>();
  expect(data.dream.armed).toBeDefined();
  expectTypeOf(data.dream.armed).toEqualTypeOf<BedwarsDreamMode>();
  expect(data.dream.armed.doubles).toBeDefined();
  expectTypeOf(data.dream.armed.doubles).toEqualTypeOf<BedwarsMode>();
  expect(data.dream.armed.doubles.winstreak).toBeDefined();
  expect(data.dream.armed.doubles.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.doubles.winstreak).toEqualTypeOf<number>();
  expect(data.dream.armed.doubles.playedGames).toBeDefined();
  expect(data.dream.armed.doubles.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.doubles.playedGames).toEqualTypeOf<number>();
  expect(data.dream.armed.doubles.kills).toBeDefined();
  expect(data.dream.armed.doubles.kills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.doubles.kills).toEqualTypeOf<number>();
  expect(data.dream.armed.doubles.deaths).toBeDefined();
  expect(data.dream.armed.doubles.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.doubles.deaths).toEqualTypeOf<number>();
  expect(data.dream.armed.doubles.wins).toBeDefined();
  expect(data.dream.armed.doubles.wins).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.doubles.wins).toEqualTypeOf<number>();
  expect(data.dream.armed.doubles.losses).toBeDefined();
  expect(data.dream.armed.doubles.losses).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.doubles.losses).toEqualTypeOf<number>();
  expect(data.dream.armed.doubles.finalKills).toBeDefined();
  expect(data.dream.armed.doubles.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.doubles.finalKills).toEqualTypeOf<number>();
  expect(data.dream.armed.doubles.finalDeaths).toBeDefined();
  expect(data.dream.armed.doubles.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.doubles.finalDeaths).toEqualTypeOf<number>();
  expect(data.dream.armed.doubles.beds).toBeDefined();
  expectTypeOf(data.dream.armed.doubles.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.dream.armed.doubles.beds.lost).toBeDefined();
  expect(data.dream.armed.doubles.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.doubles.beds.lost).toEqualTypeOf<number>();
  expect(data.dream.armed.doubles.beds.broken).toBeDefined();
  expect(data.dream.armed.doubles.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.doubles.beds.broken).toEqualTypeOf<number>();
  expect(data.dream.armed.doubles.beds.BLRatio).toBeDefined();
  expect(data.dream.armed.doubles.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.doubles.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.dream.armed.doubles.KDRatio).toBeDefined();
  expect(data.dream.armed.doubles.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.doubles.KDRatio).toEqualTypeOf<number>();
  expect(data.dream.armed.doubles.WLRatio).toBeDefined();
  expect(data.dream.armed.doubles.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.doubles.WLRatio).toEqualTypeOf<number>();
  expect(data.dream.armed.doubles.finalKDRatio).toBeDefined();
  expect(data.dream.armed.doubles.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.doubles.finalKDRatio).toEqualTypeOf<number>();
  expect(data.dream.armed.fours).toBeDefined();
  expectTypeOf(data.dream.armed.fours).toEqualTypeOf<BedwarsMode>();
  expect(data.dream.armed.fours.winstreak).toBeDefined();
  expect(data.dream.armed.fours.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.fours.winstreak).toEqualTypeOf<number>();
  expect(data.dream.armed.fours.playedGames).toBeDefined();
  expect(data.dream.armed.fours.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.fours.playedGames).toEqualTypeOf<number>();
  expect(data.dream.armed.fours.kills).toBeDefined();
  expect(data.dream.armed.fours.kills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.fours.kills).toEqualTypeOf<number>();
  expect(data.dream.armed.fours.deaths).toBeDefined();
  expect(data.dream.armed.fours.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.fours.deaths).toEqualTypeOf<number>();
  expect(data.dream.armed.fours.wins).toBeDefined();
  expect(data.dream.armed.fours.wins).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.fours.wins).toEqualTypeOf<number>();
  expect(data.dream.armed.fours.losses).toBeDefined();
  expect(data.dream.armed.fours.losses).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.fours.losses).toEqualTypeOf<number>();
  expect(data.dream.armed.fours.finalKills).toBeDefined();
  expect(data.dream.armed.fours.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.fours.finalKills).toEqualTypeOf<number>();
  expect(data.dream.armed.fours.finalDeaths).toBeDefined();
  expect(data.dream.armed.fours.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.fours.finalDeaths).toEqualTypeOf<number>();
  expect(data.dream.armed.fours.beds).toBeDefined();
  expectTypeOf(data.dream.armed.fours.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.dream.armed.fours.beds.lost).toBeDefined();
  expect(data.dream.armed.fours.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.fours.beds.lost).toEqualTypeOf<number>();
  expect(data.dream.armed.fours.beds.broken).toBeDefined();
  expect(data.dream.armed.fours.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.fours.beds.broken).toEqualTypeOf<number>();
  expect(data.dream.armed.fours.beds.BLRatio).toBeDefined();
  expect(data.dream.armed.fours.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.fours.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.dream.armed.fours.KDRatio).toBeDefined();
  expect(data.dream.armed.fours.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.fours.KDRatio).toEqualTypeOf<number>();
  expect(data.dream.armed.fours.WLRatio).toBeDefined();
  expect(data.dream.armed.fours.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.fours.WLRatio).toEqualTypeOf<number>();
  expect(data.dream.armed.fours.finalKDRatio).toBeDefined();
  expect(data.dream.armed.fours.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.armed.fours.finalKDRatio).toEqualTypeOf<number>();
  expect(data.dream.lucky).toBeDefined();
  expectTypeOf(data.dream.lucky).toEqualTypeOf<BedwarsDreamMode>();
  expect(data.dream.lucky.doubles).toBeDefined();
  expectTypeOf(data.dream.lucky.doubles).toEqualTypeOf<BedwarsMode>();
  expect(data.dream.lucky.doubles.winstreak).toBeDefined();
  expect(data.dream.lucky.doubles.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.doubles.winstreak).toEqualTypeOf<number>();
  expect(data.dream.lucky.doubles.playedGames).toBeDefined();
  expect(data.dream.lucky.doubles.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.doubles.playedGames).toEqualTypeOf<number>();
  expect(data.dream.lucky.doubles.kills).toBeDefined();
  expect(data.dream.lucky.doubles.kills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.doubles.kills).toEqualTypeOf<number>();
  expect(data.dream.lucky.doubles.deaths).toBeDefined();
  expect(data.dream.lucky.doubles.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.doubles.deaths).toEqualTypeOf<number>();
  expect(data.dream.lucky.doubles.wins).toBeDefined();
  expect(data.dream.lucky.doubles.wins).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.doubles.wins).toEqualTypeOf<number>();
  expect(data.dream.lucky.doubles.losses).toBeDefined();
  expect(data.dream.lucky.doubles.losses).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.doubles.losses).toEqualTypeOf<number>();
  expect(data.dream.lucky.doubles.finalKills).toBeDefined();
  expect(data.dream.lucky.doubles.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.doubles.finalKills).toEqualTypeOf<number>();
  expect(data.dream.lucky.doubles.finalDeaths).toBeDefined();
  expect(data.dream.lucky.doubles.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.doubles.finalDeaths).toEqualTypeOf<number>();
  expect(data.dream.lucky.doubles.beds).toBeDefined();
  expectTypeOf(data.dream.lucky.doubles.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.dream.lucky.doubles.beds.lost).toBeDefined();
  expect(data.dream.lucky.doubles.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.doubles.beds.lost).toEqualTypeOf<number>();
  expect(data.dream.lucky.doubles.beds.broken).toBeDefined();
  expect(data.dream.lucky.doubles.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.doubles.beds.broken).toEqualTypeOf<number>();
  expect(data.dream.lucky.doubles.beds.BLRatio).toBeDefined();
  expect(data.dream.lucky.doubles.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.doubles.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.dream.lucky.doubles.KDRatio).toBeDefined();
  expect(data.dream.lucky.doubles.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.doubles.KDRatio).toEqualTypeOf<number>();
  expect(data.dream.lucky.doubles.WLRatio).toBeDefined();
  expect(data.dream.lucky.doubles.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.doubles.WLRatio).toEqualTypeOf<number>();
  expect(data.dream.lucky.doubles.finalKDRatio).toBeDefined();
  expect(data.dream.lucky.doubles.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.doubles.finalKDRatio).toEqualTypeOf<number>();
  expect(data.dream.lucky.fours).toBeDefined();
  expectTypeOf(data.dream.lucky.fours).toEqualTypeOf<BedwarsMode>();
  expect(data.dream.lucky.fours.winstreak).toBeDefined();
  expect(data.dream.lucky.fours.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.fours.winstreak).toEqualTypeOf<number>();
  expect(data.dream.lucky.fours.playedGames).toBeDefined();
  expect(data.dream.lucky.fours.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.fours.playedGames).toEqualTypeOf<number>();
  expect(data.dream.lucky.fours.kills).toBeDefined();
  expect(data.dream.lucky.fours.kills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.fours.kills).toEqualTypeOf<number>();
  expect(data.dream.lucky.fours.deaths).toBeDefined();
  expect(data.dream.lucky.fours.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.fours.deaths).toEqualTypeOf<number>();
  expect(data.dream.lucky.fours.wins).toBeDefined();
  expect(data.dream.lucky.fours.wins).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.fours.wins).toEqualTypeOf<number>();
  expect(data.dream.lucky.fours.losses).toBeDefined();
  expect(data.dream.lucky.fours.losses).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.fours.losses).toEqualTypeOf<number>();
  expect(data.dream.lucky.fours.finalKills).toBeDefined();
  expect(data.dream.lucky.fours.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.fours.finalKills).toEqualTypeOf<number>();
  expect(data.dream.lucky.fours.finalDeaths).toBeDefined();
  expect(data.dream.lucky.fours.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.fours.finalDeaths).toEqualTypeOf<number>();
  expect(data.dream.lucky.fours.beds).toBeDefined();
  expectTypeOf(data.dream.lucky.fours.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.dream.lucky.fours.beds.lost).toBeDefined();
  expect(data.dream.lucky.fours.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.fours.beds.lost).toEqualTypeOf<number>();
  expect(data.dream.lucky.fours.beds.broken).toBeDefined();
  expect(data.dream.lucky.fours.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.fours.beds.broken).toEqualTypeOf<number>();
  expect(data.dream.lucky.fours.beds.BLRatio).toBeDefined();
  expect(data.dream.lucky.fours.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.fours.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.dream.lucky.fours.KDRatio).toBeDefined();
  expect(data.dream.lucky.fours.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.fours.KDRatio).toEqualTypeOf<number>();
  expect(data.dream.lucky.fours.WLRatio).toBeDefined();
  expect(data.dream.lucky.fours.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.fours.WLRatio).toEqualTypeOf<number>();
  expect(data.dream.lucky.fours.finalKDRatio).toBeDefined();
  expect(data.dream.lucky.fours.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.lucky.fours.finalKDRatio).toEqualTypeOf<number>();
  expect(data.dream.voidless).toBeDefined();
  expectTypeOf(data.dream.voidless).toEqualTypeOf<BedwarsDreamMode>();
  expect(data.dream.voidless.doubles).toBeDefined();
  expectTypeOf(data.dream.voidless.doubles).toEqualTypeOf<BedwarsMode>();
  expect(data.dream.voidless.doubles.winstreak).toBeDefined();
  expect(data.dream.voidless.doubles.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.doubles.winstreak).toEqualTypeOf<number>();
  expect(data.dream.voidless.doubles.playedGames).toBeDefined();
  expect(data.dream.voidless.doubles.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.doubles.playedGames).toEqualTypeOf<number>();
  expect(data.dream.voidless.doubles.kills).toBeDefined();
  expect(data.dream.voidless.doubles.kills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.doubles.kills).toEqualTypeOf<number>();
  expect(data.dream.voidless.doubles.deaths).toBeDefined();
  expect(data.dream.voidless.doubles.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.doubles.deaths).toEqualTypeOf<number>();
  expect(data.dream.voidless.doubles.wins).toBeDefined();
  expect(data.dream.voidless.doubles.wins).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.doubles.wins).toEqualTypeOf<number>();
  expect(data.dream.voidless.doubles.losses).toBeDefined();
  expect(data.dream.voidless.doubles.losses).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.doubles.losses).toEqualTypeOf<number>();
  expect(data.dream.voidless.doubles.finalKills).toBeDefined();
  expect(data.dream.voidless.doubles.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.doubles.finalKills).toEqualTypeOf<number>();
  expect(data.dream.voidless.doubles.finalDeaths).toBeDefined();
  expect(data.dream.voidless.doubles.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.doubles.finalDeaths).toEqualTypeOf<number>();
  expect(data.dream.voidless.doubles.beds).toBeDefined();
  expectTypeOf(data.dream.voidless.doubles.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.dream.voidless.doubles.beds.lost).toBeDefined();
  expect(data.dream.voidless.doubles.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.doubles.beds.lost).toEqualTypeOf<number>();
  expect(data.dream.voidless.doubles.beds.broken).toBeDefined();
  expect(data.dream.voidless.doubles.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.doubles.beds.broken).toEqualTypeOf<number>();
  expect(data.dream.voidless.doubles.beds.BLRatio).toBeDefined();
  expect(data.dream.voidless.doubles.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.doubles.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.dream.voidless.doubles.KDRatio).toBeDefined();
  expect(data.dream.voidless.doubles.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.doubles.KDRatio).toEqualTypeOf<number>();
  expect(data.dream.voidless.doubles.WLRatio).toBeDefined();
  expect(data.dream.voidless.doubles.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.doubles.WLRatio).toEqualTypeOf<number>();
  expect(data.dream.voidless.doubles.finalKDRatio).toBeDefined();
  expect(data.dream.voidless.doubles.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.doubles.finalKDRatio).toEqualTypeOf<number>();
  expect(data.dream.voidless.fours).toBeDefined();
  expectTypeOf(data.dream.voidless.fours).toEqualTypeOf<BedwarsMode>();
  expect(data.dream.voidless.fours.winstreak).toBeDefined();
  expect(data.dream.voidless.fours.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.fours.winstreak).toEqualTypeOf<number>();
  expect(data.dream.voidless.fours.playedGames).toBeDefined();
  expect(data.dream.voidless.fours.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.fours.playedGames).toEqualTypeOf<number>();
  expect(data.dream.voidless.fours.kills).toBeDefined();
  expect(data.dream.voidless.fours.kills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.fours.kills).toEqualTypeOf<number>();
  expect(data.dream.voidless.fours.deaths).toBeDefined();
  expect(data.dream.voidless.fours.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.fours.deaths).toEqualTypeOf<number>();
  expect(data.dream.voidless.fours.wins).toBeDefined();
  expect(data.dream.voidless.fours.wins).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.fours.wins).toEqualTypeOf<number>();
  expect(data.dream.voidless.fours.losses).toBeDefined();
  expect(data.dream.voidless.fours.losses).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.fours.losses).toEqualTypeOf<number>();
  expect(data.dream.voidless.fours.finalKills).toBeDefined();
  expect(data.dream.voidless.fours.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.fours.finalKills).toEqualTypeOf<number>();
  expect(data.dream.voidless.fours.finalDeaths).toBeDefined();
  expect(data.dream.voidless.fours.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.fours.finalDeaths).toEqualTypeOf<number>();
  expect(data.dream.voidless.fours.beds).toBeDefined();
  expectTypeOf(data.dream.voidless.fours.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.dream.voidless.fours.beds.lost).toBeDefined();
  expect(data.dream.voidless.fours.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.fours.beds.lost).toEqualTypeOf<number>();
  expect(data.dream.voidless.fours.beds.broken).toBeDefined();
  expect(data.dream.voidless.fours.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.fours.beds.broken).toEqualTypeOf<number>();
  expect(data.dream.voidless.fours.beds.BLRatio).toBeDefined();
  expect(data.dream.voidless.fours.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.fours.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.dream.voidless.fours.KDRatio).toBeDefined();
  expect(data.dream.voidless.fours.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.fours.KDRatio).toEqualTypeOf<number>();
  expect(data.dream.voidless.fours.WLRatio).toBeDefined();
  expect(data.dream.voidless.fours.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.fours.WLRatio).toEqualTypeOf<number>();
  expect(data.dream.voidless.fours.finalKDRatio).toBeDefined();
  expect(data.dream.voidless.fours.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.dream.voidless.fours.finalKDRatio).toEqualTypeOf<number>();
  expect(data.castle).toBeDefined();
  expectTypeOf(data.castle).toEqualTypeOf<BedwarsMode>();
  expect(data.castle.winstreak).toBeDefined();
  expect(data.castle.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.castle.winstreak).toEqualTypeOf<number>();
  expect(data.castle.playedGames).toBeDefined();
  expect(data.castle.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.castle.playedGames).toEqualTypeOf<number>();
  expect(data.castle.kills).toBeDefined();
  expect(data.castle.kills).greaterThanOrEqual(0);
  expectTypeOf(data.castle.kills).toEqualTypeOf<number>();
  expect(data.castle.deaths).toBeDefined();
  expect(data.castle.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.castle.deaths).toEqualTypeOf<number>();
  expect(data.castle.wins).toBeDefined();
  expect(data.castle.wins).greaterThanOrEqual(0);
  expectTypeOf(data.castle.wins).toEqualTypeOf<number>();
  expect(data.castle.losses).toBeDefined();
  expect(data.castle.losses).greaterThanOrEqual(0);
  expectTypeOf(data.castle.losses).toEqualTypeOf<number>();
  expect(data.castle.finalKills).toBeDefined();
  expect(data.castle.finalKills).greaterThanOrEqual(0);
  expectTypeOf(data.castle.finalKills).toEqualTypeOf<number>();
  expect(data.castle.finalDeaths).toBeDefined();
  expect(data.castle.finalDeaths).greaterThanOrEqual(0);
  expectTypeOf(data.castle.finalDeaths).toEqualTypeOf<number>();
  expect(data.castle.beds).toBeDefined();
  expectTypeOf(data.castle.beds).toEqualTypeOf<BedWarsBeds>();
  expect(data.castle.beds.lost).toBeDefined();
  expect(data.castle.beds.lost).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.castle.beds.lost).toEqualTypeOf<number>();
  expect(data.castle.beds.broken).toBeDefined();
  expect(data.castle.beds.broken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.castle.beds.broken).toEqualTypeOf<number>();
  expect(data.castle.beds.BLRatio).toBeDefined();
  expect(data.castle.beds.BLRatio).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.castle.beds.BLRatio).toEqualTypeOf<number>();
  expect(data.castle.KDRatio).toBeDefined();
  expect(data.castle.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.castle.KDRatio).toEqualTypeOf<number>();
  expect(data.castle.WLRatio).toBeDefined();
  expect(data.castle.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.castle.WLRatio).toEqualTypeOf<number>();
  expect(data.castle.finalKDRatio).toBeDefined();
  expect(data.castle.finalKDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.castle.finalKDRatio).toEqualTypeOf<number>();
  expect(data.practice).toBeDefined();
  expectTypeOf(data.practice).toEqualTypeOf<BedWarsPracticeStats>();
  expect(data.slumberTickets).toBeDefined();
  expect(data.slumberTickets).greaterThanOrEqual(0);
  expectTypeOf(data.slumberTickets).toEqualTypeOf<number>();
  expect(data.totalSlumberTicket).toBeDefined();
  expect(data.totalSlumberTicket).greaterThanOrEqual(0);
  expectTypeOf(data.totalSlumberTicket).toEqualTypeOf<number>();
});
