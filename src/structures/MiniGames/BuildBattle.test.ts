import BuildBattle, { BuildBattleWins } from './BuildBattle.js';
import { expect, expectTypeOf, test } from 'vitest';

test('BuildBattle', () => {
  const data = new BuildBattle({ stats: 'meow' });
  expect(data).toBeInstanceOf(BuildBattle);
  expectTypeOf(data).toEqualTypeOf<BuildBattle>();
  expect(data.score).toBeDefined();
  expect(data.score).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.score).toEqualTypeOf<number>();
  expect(data.totalWins).toBeDefined();
  expect(data.totalWins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.totalWins).toEqualTypeOf<number>();
  expect(data.games).toBeDefined();
  expect(data.games).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.games).toEqualTypeOf<number>();
  expect(data.WLR).toBeDefined();
  expect(data.WLR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.WLR).toEqualTypeOf<number>();
  expect(data.superVotes).toBeDefined();
  expect(data.superVotes).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.superVotes).toEqualTypeOf<number>();
  expect(data.coins).toBeDefined();
  expect(data.coins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.coins).toEqualTypeOf<number>();
  expect(data.totalVotes).toBeDefined();
  expect(data.totalVotes).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.totalVotes).toEqualTypeOf<number>();
  expect(data.wins).toBeDefined();
  expectTypeOf(data.wins).toEqualTypeOf<BuildBattleWins>();
  expect(data.wins.solo).toBeDefined();
  expect(data.wins.solo).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.wins.solo).toEqualTypeOf<number>();
  expect(data.wins.teams).toBeDefined();
  expect(data.wins.teams).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.wins.teams).toEqualTypeOf<number>();
  expect(data.wins.pro).toBeDefined();
  expect(data.wins.pro).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.wins.pro).toEqualTypeOf<number>();
  expect(data.wins.gtb).toBeDefined();
  expect(data.wins.gtb).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.wins.gtb).toEqualTypeOf<number>();
});
