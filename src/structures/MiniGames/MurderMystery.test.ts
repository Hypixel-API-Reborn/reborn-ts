import MurderMystery, { MurderMysteryModeStats } from './MurderMystery.js';
import { expect, expectTypeOf, test } from 'vitest';

test('MurderMystery', () => {
  const data = new MurderMystery({ stats: 'meow' });
  expect(data).toBeDefined();
  expect(data).toBeInstanceOf(MurderMystery);
  expectTypeOf(data).toEqualTypeOf<MurderMystery>();
  expect(data.tokens).toBeDefined();
  expect(data.tokens).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.tokens).toEqualTypeOf<number>();
  expect(data.goldPickedUp).toBeDefined();
  expect(data.goldPickedUp).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.goldPickedUp).toEqualTypeOf<number>();
  expect(data.playedGames).toBeDefined();
  expect(data.playedGames).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.playedGames).toEqualTypeOf<number>();
  expect(data.kills).toBeDefined();
  expect(data.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.kills).toEqualTypeOf<number>();
  expect(data.thrownKnifeKills).toBeDefined();
  expect(data.thrownKnifeKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.thrownKnifeKills).toEqualTypeOf<number>();
  expect(data.knifeKills).toBeDefined();
  expect(data.knifeKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.knifeKills).toEqualTypeOf<number>();
  expect(data.trapKills).toBeDefined();
  expect(data.trapKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.trapKills).toEqualTypeOf<number>();
  expect(data.bowKills).toBeDefined();
  expect(data.bowKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.bowKills).toEqualTypeOf<number>();
  expect(data.killsAsMurderer).toBeDefined();
  expect(data.killsAsMurderer).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.killsAsMurderer).toEqualTypeOf<number>();
  expect(data.deaths).toBeDefined();
  expect(data.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.deaths).toEqualTypeOf<number>();
  expect(data.KDR).toBeDefined();
  expect(data.KDR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.KDR).toEqualTypeOf<number>();
  expect(data.winsAsMurderer).toBeDefined();
  expect(data.winsAsMurderer).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.winsAsMurderer).toEqualTypeOf<number>();
  expect(data.winsAsDetective).toBeDefined();
  expect(data.winsAsDetective).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.winsAsDetective).toEqualTypeOf<number>();
  expect(data.winsAsHero).toBeDefined();
  expect(data.winsAsHero).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.winsAsHero).toEqualTypeOf<number>();
  expect(data.fastestWinAsMurderer).toBeDefined();
  expect(data.fastestWinAsMurderer).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.fastestWinAsMurderer).toEqualTypeOf<number>();
  expect(data.fastestWinAsDetective).toBeDefined();
  expect(data.fastestWinAsDetective).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.fastestWinAsDetective).toEqualTypeOf<number>();
  expect(data.totalTimeSurvived).toBeDefined();
  expect(data.totalTimeSurvived).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.totalTimeSurvived).toEqualTypeOf<number>();
  expect(data.wins).toBeDefined();
  expect(data.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.wins).toEqualTypeOf<number>();
  expect(data.suicides).toBeDefined();
  expect(data.suicides).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.suicides).toEqualTypeOf<number>();
  expect(data.classic).toBeDefined();
  expectTypeOf(data.classic).toEqualTypeOf<MurderMysteryModeStats>();
  expect(data.classic.goldPickedUp).toBeDefined();
  expect(data.classic.goldPickedUp).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.classic.goldPickedUp).toEqualTypeOf<number>();
  expect(data.classic.kills).toBeDefined();
  expect(data.classic.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.classic.kills).toEqualTypeOf<number>();
  expect(data.classic.thrownKnifeKills).toBeDefined();
  expect(data.classic.thrownKnifeKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.classic.thrownKnifeKills).toEqualTypeOf<number>();
  expect(data.classic.knifeKills).toBeDefined();
  expect(data.classic.knifeKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.classic.knifeKills).toEqualTypeOf<number>();
  expect(data.classic.bowKills).toBeDefined();
  expect(data.classic.bowKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.classic.bowKills).toEqualTypeOf<number>();
  expect(data.classic.trapKills).toBeDefined();
  expect(data.classic.trapKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.classic.trapKills).toEqualTypeOf<number>();
  expect(data.classic.deaths).toBeDefined();
  expect(data.classic.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.classic.deaths).toEqualTypeOf<number>();
  expect(data.classic.suicides).toBeDefined();
  expect(data.classic.suicides).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.classic.suicides).toEqualTypeOf<number>();
  expect(data.classic.KDR).toBeDefined();
  expect(data.classic.KDR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.classic.KDR).toEqualTypeOf<number>();
  expect(data.classic.wins).toBeDefined();
  expect(data.classic.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.classic.wins).toEqualTypeOf<number>();
  expect(data.classic.winsAsDetective).toBeDefined();
  expect(data.classic.winsAsDetective).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.classic.winsAsDetective).toEqualTypeOf<number>();
  expect(data.classic.winsAsMurderer).toBeDefined();
  expect(data.classic.winsAsMurderer).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.classic.winsAsMurderer).toEqualTypeOf<number>();
  expect(data.classic.winsAsHero).toBeDefined();
  expect(data.classic.winsAsHero).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.classic.winsAsHero).toEqualTypeOf<number>();
  expect(data.classic.playedGames).toBeDefined();
  expect(data.classic.playedGames).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.classic.playedGames).toEqualTypeOf<number>();
  expect(data.assassins).toBeDefined();
  expectTypeOf(data.assassins).toEqualTypeOf<MurderMysteryModeStats>();
  expect(data.assassins.goldPickedUp).toBeDefined();
  expect(data.assassins.goldPickedUp).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assassins.goldPickedUp).toEqualTypeOf<number>();
  expect(data.assassins.kills).toBeDefined();
  expect(data.assassins.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assassins.kills).toEqualTypeOf<number>();
  expect(data.assassins.thrownKnifeKills).toBeDefined();
  expect(data.assassins.thrownKnifeKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assassins.thrownKnifeKills).toEqualTypeOf<number>();
  expect(data.assassins.knifeKills).toBeDefined();
  expect(data.assassins.knifeKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assassins.knifeKills).toEqualTypeOf<number>();
  expect(data.assassins.bowKills).toBeDefined();
  expect(data.assassins.bowKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assassins.bowKills).toEqualTypeOf<number>();
  expect(data.assassins.trapKills).toBeDefined();
  expect(data.assassins.trapKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assassins.trapKills).toEqualTypeOf<number>();
  expect(data.assassins.deaths).toBeDefined();
  expect(data.assassins.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assassins.deaths).toEqualTypeOf<number>();
  expect(data.assassins.suicides).toBeDefined();
  expect(data.assassins.suicides).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assassins.suicides).toEqualTypeOf<number>();
  expect(data.assassins.KDR).toBeDefined();
  expect(data.assassins.KDR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assassins.KDR).toEqualTypeOf<number>();
  expect(data.assassins.wins).toBeDefined();
  expect(data.assassins.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assassins.wins).toEqualTypeOf<number>();
  expect(data.assassins.winsAsDetective).toBeDefined();
  expect(data.assassins.winsAsDetective).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assassins.winsAsDetective).toEqualTypeOf<number>();
  expect(data.assassins.winsAsMurderer).toBeDefined();
  expect(data.assassins.winsAsMurderer).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assassins.winsAsMurderer).toEqualTypeOf<number>();
  expect(data.assassins.winsAsHero).toBeDefined();
  expect(data.assassins.winsAsHero).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assassins.winsAsHero).toEqualTypeOf<number>();
  expect(data.assassins.playedGames).toBeDefined();
  expect(data.assassins.playedGames).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assassins.playedGames).toEqualTypeOf<number>();
  expect(data.doubleUp).toBeDefined();
  expectTypeOf(data.doubleUp).toEqualTypeOf<MurderMysteryModeStats>();
  expect(data.doubleUp.goldPickedUp).toBeDefined();
  expect(data.doubleUp.goldPickedUp).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleUp.goldPickedUp).toEqualTypeOf<number>();
  expect(data.doubleUp.kills).toBeDefined();
  expect(data.doubleUp.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleUp.kills).toEqualTypeOf<number>();
  expect(data.doubleUp.thrownKnifeKills).toBeDefined();
  expect(data.doubleUp.thrownKnifeKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleUp.thrownKnifeKills).toEqualTypeOf<number>();
  expect(data.doubleUp.knifeKills).toBeDefined();
  expect(data.doubleUp.knifeKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleUp.knifeKills).toEqualTypeOf<number>();
  expect(data.doubleUp.bowKills).toBeDefined();
  expect(data.doubleUp.bowKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleUp.bowKills).toEqualTypeOf<number>();
  expect(data.doubleUp.trapKills).toBeDefined();
  expect(data.doubleUp.trapKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleUp.trapKills).toEqualTypeOf<number>();
  expect(data.doubleUp.deaths).toBeDefined();
  expect(data.doubleUp.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleUp.deaths).toEqualTypeOf<number>();
  expect(data.doubleUp.suicides).toBeDefined();
  expect(data.doubleUp.suicides).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleUp.suicides).toEqualTypeOf<number>();
  expect(data.doubleUp.KDR).toBeDefined();
  expect(data.doubleUp.KDR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleUp.KDR).toEqualTypeOf<number>();
  expect(data.doubleUp.wins).toBeDefined();
  expect(data.doubleUp.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleUp.wins).toEqualTypeOf<number>();
  expect(data.doubleUp.winsAsDetective).toBeDefined();
  expect(data.doubleUp.winsAsDetective).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleUp.winsAsDetective).toEqualTypeOf<number>();
  expect(data.doubleUp.winsAsMurderer).toBeDefined();
  expect(data.doubleUp.winsAsMurderer).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleUp.winsAsMurderer).toEqualTypeOf<number>();
  expect(data.doubleUp.winsAsHero).toBeDefined();
  expect(data.doubleUp.winsAsHero).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleUp.winsAsHero).toEqualTypeOf<number>();
  expect(data.doubleUp.playedGames).toBeDefined();
  expect(data.doubleUp.playedGames).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.doubleUp.playedGames).toEqualTypeOf<number>();
  expect(data.infection).toBeDefined();
  expectTypeOf(data.infection).toEqualTypeOf<MurderMysteryModeStats>();
  expect(data.infection.goldPickedUp).toBeDefined();
  expect(data.infection.goldPickedUp).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.infection.goldPickedUp).toEqualTypeOf<number>();
  expect(data.infection.kills).toBeDefined();
  expect(data.infection.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.infection.kills).toEqualTypeOf<number>();
  expect(data.infection.thrownKnifeKills).toBeDefined();
  expect(data.infection.thrownKnifeKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.infection.thrownKnifeKills).toEqualTypeOf<number>();
  expect(data.infection.knifeKills).toBeDefined();
  expect(data.infection.knifeKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.infection.knifeKills).toEqualTypeOf<number>();
  expect(data.infection.bowKills).toBeDefined();
  expect(data.infection.bowKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.infection.bowKills).toEqualTypeOf<number>();
  expect(data.infection.trapKills).toBeDefined();
  expect(data.infection.trapKills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.infection.trapKills).toEqualTypeOf<number>();
  expect(data.infection.deaths).toBeDefined();
  expect(data.infection.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.infection.deaths).toEqualTypeOf<number>();
  expect(data.infection.suicides).toBeDefined();
  expect(data.infection.suicides).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.infection.suicides).toEqualTypeOf<number>();
  expect(data.infection.KDR).toBeDefined();
  expect(data.infection.KDR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.infection.KDR).toEqualTypeOf<number>();
  expect(data.infection.wins).toBeDefined();
  expect(data.infection.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.infection.wins).toEqualTypeOf<number>();
  expect(data.infection.winsAsDetective).toBeDefined();
  expect(data.infection.winsAsDetective).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.infection.winsAsDetective).toEqualTypeOf<number>();
  expect(data.infection.winsAsMurderer).toBeDefined();
  expect(data.infection.winsAsMurderer).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.infection.winsAsMurderer).toEqualTypeOf<number>();
  expect(data.infection.winsAsHero).toBeDefined();
  expect(data.infection.winsAsHero).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.infection.winsAsHero).toEqualTypeOf<number>();
  expect(data.infection.playedGames).toBeDefined();
  expect(data.infection.playedGames).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.infection.playedGames).toEqualTypeOf<number>();
});
