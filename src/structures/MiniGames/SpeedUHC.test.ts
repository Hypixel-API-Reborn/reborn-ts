import SpeedUHC, { SpeedUHCMode } from './SpeedUHC';
import { expect, expectTypeOf, test } from 'vitest';

test('SpeedUHC', () => {
  const data = new SpeedUHC({ stats: 'meow' });
  expect(data).toBeDefined();
  expect(data).toBeInstanceOf(SpeedUHC);
  expectTypeOf(data).toEqualTypeOf<SpeedUHC>();
  expect(data.coins).toBeDefined();
  expect(data.coins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.coins).toEqualTypeOf<number>();
  expect(data.kills).toBeDefined();
  expect(data.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.kills).toEqualTypeOf<number>();
  expect(data.deaths).toBeDefined();
  expect(data.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.deaths).toEqualTypeOf<number>();
  expect(data.KDR).toBeDefined();
  expect(data.KDR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.KDR).toEqualTypeOf<number>();
  expect(data.wins).toBeDefined();
  expect(data.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.wins).toEqualTypeOf<number>();
  expect(data.losses).toBeDefined();
  expect(data.losses).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.losses).toEqualTypeOf<number>();
  expect(data.WLR).toBeDefined();
  expect(data.WLR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.WLR).toEqualTypeOf<number>();
  expect(data.playedGames).toBeDefined();
  expect(data.playedGames).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.playedGames).toEqualTypeOf<number>();
  expect(data.winstreak).toBeDefined();
  expect(data.winstreak).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.winstreak).toEqualTypeOf<number>();
  expect(data.killstreak).toBeDefined();
  expect(data.killstreak).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.killstreak).toEqualTypeOf<number>();
  expect(data.blocksBroken).toBeDefined();
  expect(data.blocksBroken).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.blocksBroken).toEqualTypeOf<number>();
  expect(data.blocksPlaced).toBeDefined();
  expect(data.blocksPlaced).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.blocksPlaced).toEqualTypeOf<number>();
  expect(data.quits).toBeDefined();
  expect(data.quits).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.quits).toEqualTypeOf<number>();
  expect(data.itemsEnchanted).toBeDefined();
  expect(data.itemsEnchanted).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.itemsEnchanted).toEqualTypeOf<number>();
  expect(data.assists).toBeDefined();
  expect(data.assists).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.assists).toEqualTypeOf<number>();
  expect(data.solo).toBeDefined();
  expectTypeOf(data.solo).toEqualTypeOf<SpeedUHCMode>();
  expect(data.solo.kills).toBeDefined();
  expect(data.solo.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.solo.kills).toEqualTypeOf<number>();
  expect(data.solo.deaths).toBeDefined();
  expect(data.solo.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.solo.deaths).toEqualTypeOf<number>();
  expect(data.solo.KDR).toBeDefined();
  expect(data.solo.KDR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.solo.KDR).toEqualTypeOf<number>();
  expect(data.solo.wins).toBeDefined();
  expect(data.solo.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.solo.wins).toEqualTypeOf<number>();
  expect(data.solo.losses).toBeDefined();
  expect(data.solo.losses).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.solo.losses).toEqualTypeOf<number>();
  expect(data.solo.WLR).toBeDefined();
  expect(data.solo.WLR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.solo.WLR).toEqualTypeOf<number>();
  expect(data.solo.playedGames).toBeDefined();
  expect(data.solo.playedGames).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.solo.playedGames).toEqualTypeOf<number>();
  expect(data.solo.winstreak).toBeDefined();
  expect(data.solo.winstreak).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.solo.winstreak).toEqualTypeOf<number>();
  expect(data.solo.killStreak).toBeDefined();
  expect(data.solo.killStreak).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.solo.killStreak).toEqualTypeOf<number>();
  expect(data.solo.assists).toBeDefined();
  expect(data.solo.assists).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.solo.assists).toEqualTypeOf<number>();
  expect(data.soloNormal).toBeDefined();
  expectTypeOf(data.soloNormal).toEqualTypeOf<SpeedUHCMode>();
  expect(data.soloNormal.kills).toBeDefined();
  expect(data.soloNormal.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.kills).toEqualTypeOf<number>();
  expect(data.soloNormal.deaths).toBeDefined();
  expect(data.soloNormal.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.deaths).toEqualTypeOf<number>();
  expect(data.soloNormal.KDR).toBeDefined();
  expect(data.soloNormal.KDR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.KDR).toEqualTypeOf<number>();
  expect(data.soloNormal.wins).toBeDefined();
  expect(data.soloNormal.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.wins).toEqualTypeOf<number>();
  expect(data.soloNormal.losses).toBeDefined();
  expect(data.soloNormal.losses).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.losses).toEqualTypeOf<number>();
  expect(data.soloNormal.WLR).toBeDefined();
  expect(data.soloNormal.WLR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.WLR).toEqualTypeOf<number>();
  expect(data.soloNormal.playedGames).toBeDefined();
  expect(data.soloNormal.playedGames).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.playedGames).toEqualTypeOf<number>();
  expect(data.soloNormal.winstreak).toBeDefined();
  expect(data.soloNormal.winstreak).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.winstreak).toEqualTypeOf<number>();
  expect(data.soloNormal.killStreak).toBeDefined();
  expect(data.soloNormal.killStreak).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.killStreak).toEqualTypeOf<number>();
  expect(data.soloNormal.assists).toBeDefined();
  expect(data.soloNormal.assists).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.assists).toEqualTypeOf<number>();
  expect(data.soloInsane).toBeDefined();
  expectTypeOf(data.soloInsane).toEqualTypeOf<SpeedUHCMode>();
  expect(data.soloInsane.kills).toBeDefined();
  expect(data.soloInsane.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.kills).toEqualTypeOf<number>();
  expect(data.soloInsane.deaths).toBeDefined();
  expect(data.soloInsane.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.deaths).toEqualTypeOf<number>();
  expect(data.soloInsane.KDR).toBeDefined();
  expect(data.soloInsane.KDR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.KDR).toEqualTypeOf<number>();
  expect(data.soloInsane.wins).toBeDefined();
  expect(data.soloInsane.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.wins).toEqualTypeOf<number>();
  expect(data.soloInsane.losses).toBeDefined();
  expect(data.soloInsane.losses).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.losses).toEqualTypeOf<number>();
  expect(data.soloInsane.WLR).toBeDefined();
  expect(data.soloInsane.WLR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.WLR).toEqualTypeOf<number>();
  expect(data.soloInsane.playedGames).toBeDefined();
  expect(data.soloInsane.playedGames).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.playedGames).toEqualTypeOf<number>();
  expect(data.soloInsane.winstreak).toBeDefined();
  expect(data.soloInsane.winstreak).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.winstreak).toEqualTypeOf<number>();
  expect(data.soloInsane.killStreak).toBeDefined();
  expect(data.soloInsane.killStreak).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.killStreak).toEqualTypeOf<number>();
  expect(data.soloInsane.assists).toBeDefined();
  expect(data.soloInsane.assists).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.assists).toEqualTypeOf<number>();
  expect(data.team).toBeDefined();
  expectTypeOf(data.team).toEqualTypeOf<SpeedUHCMode>();
  expect(data.team.kills).toBeDefined();
  expect(data.team.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.team.kills).toEqualTypeOf<number>();
  expect(data.team.deaths).toBeDefined();
  expect(data.team.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.team.deaths).toEqualTypeOf<number>();
  expect(data.team.KDR).toBeDefined();
  expect(data.team.KDR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.team.KDR).toEqualTypeOf<number>();
  expect(data.team.wins).toBeDefined();
  expect(data.team.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.team.wins).toEqualTypeOf<number>();
  expect(data.team.losses).toBeDefined();
  expect(data.team.losses).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.team.losses).toEqualTypeOf<number>();
  expect(data.team.WLR).toBeDefined();
  expect(data.team.WLR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.team.WLR).toEqualTypeOf<number>();
  expect(data.team.playedGames).toBeDefined();
  expect(data.team.playedGames).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.team.playedGames).toEqualTypeOf<number>();
  expect(data.team.winstreak).toBeDefined();
  expect(data.team.winstreak).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.team.winstreak).toEqualTypeOf<number>();
  expect(data.team.killStreak).toBeDefined();
  expect(data.team.killStreak).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.team.killStreak).toEqualTypeOf<number>();
  expect(data.team.assists).toBeDefined();
  expect(data.team.assists).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.team.assists).toEqualTypeOf<number>();
  expect(data.teamNormal).toBeDefined();
  expectTypeOf(data.teamNormal).toEqualTypeOf<SpeedUHCMode>();
  expect(data.teamNormal.kills).toBeDefined();
  expect(data.teamNormal.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.kills).toEqualTypeOf<number>();
  expect(data.teamNormal.deaths).toBeDefined();
  expect(data.teamNormal.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.deaths).toEqualTypeOf<number>();
  expect(data.teamNormal.KDR).toBeDefined();
  expect(data.teamNormal.KDR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.KDR).toEqualTypeOf<number>();
  expect(data.teamNormal.wins).toBeDefined();
  expect(data.teamNormal.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.wins).toEqualTypeOf<number>();
  expect(data.teamNormal.losses).toBeDefined();
  expect(data.teamNormal.losses).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.losses).toEqualTypeOf<number>();
  expect(data.teamNormal.WLR).toBeDefined();
  expect(data.teamNormal.WLR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.WLR).toEqualTypeOf<number>();
  expect(data.teamNormal.playedGames).toBeDefined();
  expect(data.teamNormal.playedGames).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.playedGames).toEqualTypeOf<number>();
  expect(data.teamNormal.winstreak).toBeDefined();
  expect(data.teamNormal.winstreak).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.winstreak).toEqualTypeOf<number>();
  expect(data.teamNormal.killStreak).toBeDefined();
  expect(data.teamNormal.killStreak).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.killStreak).toEqualTypeOf<number>();
  expect(data.teamNormal.assists).toBeDefined();
  expect(data.teamNormal.assists).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.assists).toEqualTypeOf<number>();
  expect(data.teamInsane).toBeDefined();
  expectTypeOf(data.teamInsane).toEqualTypeOf<SpeedUHCMode>();
  expect(data.teamInsane.kills).toBeDefined();
  expect(data.teamInsane.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.kills).toEqualTypeOf<number>();
  expect(data.teamInsane.deaths).toBeDefined();
  expect(data.teamInsane.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.deaths).toEqualTypeOf<number>();
  expect(data.teamInsane.KDR).toBeDefined();
  expect(data.teamInsane.KDR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.KDR).toEqualTypeOf<number>();
  expect(data.teamInsane.wins).toBeDefined();
  expect(data.teamInsane.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.wins).toEqualTypeOf<number>();
  expect(data.teamInsane.losses).toBeDefined();
  expect(data.teamInsane.losses).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.losses).toEqualTypeOf<number>();
  expect(data.teamInsane.WLR).toBeDefined();
  expect(data.teamInsane.WLR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.WLR).toEqualTypeOf<number>();
  expect(data.teamInsane.playedGames).toBeDefined();
  expect(data.teamInsane.playedGames).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.playedGames).toEqualTypeOf<number>();
  expect(data.teamInsane.winstreak).toBeDefined();
  expect(data.teamInsane.winstreak).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.winstreak).toEqualTypeOf<number>();
  expect(data.teamInsane.killStreak).toBeDefined();
  expect(data.teamInsane.killStreak).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.killStreak).toEqualTypeOf<number>();
  expect(data.teamInsane.assists).toBeDefined();
  expect(data.teamInsane.assists).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.assists).toEqualTypeOf<number>();
});
