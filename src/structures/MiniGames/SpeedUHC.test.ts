import { expect, expectTypeOf, test } from 'vitest';
import SpeedUHC, { SpeedUHCMode } from './SpeedUHC';

test('SpeedUHC', () => {
  const data = new SpeedUHC({ stats: 'meow' });
  expect(data).toBeDefined();
  expect(data).toBeInstanceOf(SpeedUHC);
  expectTypeOf(data).toEqualTypeOf<SpeedUHC>();
  expect(data.coins).toBeDefined();
  expect(data.coins).greaterThanOrEqual(0);
  expectTypeOf(data.coins).toEqualTypeOf<number>();
  expect(data.kills).toBeDefined();
  expect(data.kills).greaterThanOrEqual(0);
  expectTypeOf(data.kills).toEqualTypeOf<number>();
  expect(data.deaths).toBeDefined();
  expect(data.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.deaths).toEqualTypeOf<number>();
  expect(data.KDRatio).toBeDefined();
  expect(data.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.KDRatio).toEqualTypeOf<number>();
  expect(data.wins).toBeDefined();
  expect(data.wins).greaterThanOrEqual(0);
  expectTypeOf(data.wins).toEqualTypeOf<number>();
  expect(data.losses).toBeDefined();
  expect(data.losses).greaterThanOrEqual(0);
  expectTypeOf(data.losses).toEqualTypeOf<number>();
  expect(data.WLRatio).toBeDefined();
  expect(data.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.WLRatio).toEqualTypeOf<number>();
  expect(data.playedGames).toBeDefined();
  expect(data.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.playedGames).toEqualTypeOf<number>();
  expect(data.winstreak).toBeDefined();
  expect(data.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.winstreak).toEqualTypeOf<number>();
  expect(data.killstreak).toBeDefined();
  expect(data.killstreak).greaterThanOrEqual(0);
  expectTypeOf(data.killstreak).toEqualTypeOf<number>();
  expect(data.blocksBroken).toBeDefined();
  expect(data.blocksBroken).greaterThanOrEqual(0);
  expectTypeOf(data.blocksBroken).toEqualTypeOf<number>();
  expect(data.blocksPlaced).toBeDefined();
  expect(data.blocksPlaced).greaterThanOrEqual(0);
  expectTypeOf(data.blocksPlaced).toEqualTypeOf<number>();
  expect(data.quits).toBeDefined();
  expect(data.quits).greaterThanOrEqual(0);
  expectTypeOf(data.quits).toEqualTypeOf<number>();
  expect(data.itemsEnchanted).toBeDefined();
  expect(data.itemsEnchanted).greaterThanOrEqual(0);
  expectTypeOf(data.itemsEnchanted).toEqualTypeOf<number>();
  expect(data.assists).toBeDefined();
  expect(data.assists).greaterThanOrEqual(0);
  expectTypeOf(data.assists).toEqualTypeOf<number>();
  expect(data.solo).toBeDefined();
  expectTypeOf(data.solo).toEqualTypeOf<SpeedUHCMode>();
  expect(data.solo.kills).toBeDefined();
  expect(data.solo.kills).greaterThanOrEqual(0);
  expectTypeOf(data.solo.kills).toEqualTypeOf<number>();
  expect(data.solo.deaths).toBeDefined();
  expect(data.solo.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.solo.deaths).toEqualTypeOf<number>();
  expect(data.solo.KDRatio).toBeDefined();
  expect(data.solo.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.solo.KDRatio).toEqualTypeOf<number>();
  expect(data.solo.wins).toBeDefined();
  expect(data.solo.wins).greaterThanOrEqual(0);
  expectTypeOf(data.solo.wins).toEqualTypeOf<number>();
  expect(data.solo.losses).toBeDefined();
  expect(data.solo.losses).greaterThanOrEqual(0);
  expectTypeOf(data.solo.losses).toEqualTypeOf<number>();
  expect(data.solo.WLRatio).toBeDefined();
  expect(data.solo.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.solo.WLRatio).toEqualTypeOf<number>();
  expect(data.solo.playedGames).toBeDefined();
  expect(data.solo.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.solo.playedGames).toEqualTypeOf<number>();
  expect(data.solo.winstreak).toBeDefined();
  expect(data.solo.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.solo.winstreak).toEqualTypeOf<number>();
  expect(data.solo.killStreak).toBeDefined();
  expect(data.solo.killStreak).greaterThanOrEqual(0);
  expectTypeOf(data.solo.killStreak).toEqualTypeOf<number>();
  expect(data.solo.assists).toBeDefined();
  expect(data.solo.assists).greaterThanOrEqual(0);
  expectTypeOf(data.solo.assists).toEqualTypeOf<number>();
  expect(data.soloNormal).toBeDefined();
  expectTypeOf(data.soloNormal).toEqualTypeOf<SpeedUHCMode>();
  expect(data.soloNormal.kills).toBeDefined();
  expect(data.soloNormal.kills).greaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.kills).toEqualTypeOf<number>();
  expect(data.soloNormal.deaths).toBeDefined();
  expect(data.soloNormal.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.deaths).toEqualTypeOf<number>();
  expect(data.soloNormal.KDRatio).toBeDefined();
  expect(data.soloNormal.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.KDRatio).toEqualTypeOf<number>();
  expect(data.soloNormal.wins).toBeDefined();
  expect(data.soloNormal.wins).greaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.wins).toEqualTypeOf<number>();
  expect(data.soloNormal.losses).toBeDefined();
  expect(data.soloNormal.losses).greaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.losses).toEqualTypeOf<number>();
  expect(data.soloNormal.WLRatio).toBeDefined();
  expect(data.soloNormal.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.WLRatio).toEqualTypeOf<number>();
  expect(data.soloNormal.playedGames).toBeDefined();
  expect(data.soloNormal.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.playedGames).toEqualTypeOf<number>();
  expect(data.soloNormal.winstreak).toBeDefined();
  expect(data.soloNormal.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.winstreak).toEqualTypeOf<number>();
  expect(data.soloNormal.killStreak).toBeDefined();
  expect(data.soloNormal.killStreak).greaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.killStreak).toEqualTypeOf<number>();
  expect(data.soloNormal.assists).toBeDefined();
  expect(data.soloNormal.assists).greaterThanOrEqual(0);
  expectTypeOf(data.soloNormal.assists).toEqualTypeOf<number>();
  expect(data.soloInsane).toBeDefined();
  expectTypeOf(data.soloInsane).toEqualTypeOf<SpeedUHCMode>();
  expect(data.soloInsane.kills).toBeDefined();
  expect(data.soloInsane.kills).greaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.kills).toEqualTypeOf<number>();
  expect(data.soloInsane.deaths).toBeDefined();
  expect(data.soloInsane.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.deaths).toEqualTypeOf<number>();
  expect(data.soloInsane.KDRatio).toBeDefined();
  expect(data.soloInsane.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.KDRatio).toEqualTypeOf<number>();
  expect(data.soloInsane.wins).toBeDefined();
  expect(data.soloInsane.wins).greaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.wins).toEqualTypeOf<number>();
  expect(data.soloInsane.losses).toBeDefined();
  expect(data.soloInsane.losses).greaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.losses).toEqualTypeOf<number>();
  expect(data.soloInsane.WLRatio).toBeDefined();
  expect(data.soloInsane.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.WLRatio).toEqualTypeOf<number>();
  expect(data.soloInsane.playedGames).toBeDefined();
  expect(data.soloInsane.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.playedGames).toEqualTypeOf<number>();
  expect(data.soloInsane.winstreak).toBeDefined();
  expect(data.soloInsane.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.winstreak).toEqualTypeOf<number>();
  expect(data.soloInsane.killStreak).toBeDefined();
  expect(data.soloInsane.killStreak).greaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.killStreak).toEqualTypeOf<number>();
  expect(data.soloInsane.assists).toBeDefined();
  expect(data.soloInsane.assists).greaterThanOrEqual(0);
  expectTypeOf(data.soloInsane.assists).toEqualTypeOf<number>();
  expect(data.team).toBeDefined();
  expectTypeOf(data.team).toEqualTypeOf<SpeedUHCMode>();
  expect(data.team.kills).toBeDefined();
  expect(data.team.kills).greaterThanOrEqual(0);
  expectTypeOf(data.team.kills).toEqualTypeOf<number>();
  expect(data.team.deaths).toBeDefined();
  expect(data.team.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.team.deaths).toEqualTypeOf<number>();
  expect(data.team.KDRatio).toBeDefined();
  expect(data.team.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.team.KDRatio).toEqualTypeOf<number>();
  expect(data.team.wins).toBeDefined();
  expect(data.team.wins).greaterThanOrEqual(0);
  expectTypeOf(data.team.wins).toEqualTypeOf<number>();
  expect(data.team.losses).toBeDefined();
  expect(data.team.losses).greaterThanOrEqual(0);
  expectTypeOf(data.team.losses).toEqualTypeOf<number>();
  expect(data.team.WLRatio).toBeDefined();
  expect(data.team.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.team.WLRatio).toEqualTypeOf<number>();
  expect(data.team.playedGames).toBeDefined();
  expect(data.team.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.team.playedGames).toEqualTypeOf<number>();
  expect(data.team.winstreak).toBeDefined();
  expect(data.team.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.team.winstreak).toEqualTypeOf<number>();
  expect(data.team.killStreak).toBeDefined();
  expect(data.team.killStreak).greaterThanOrEqual(0);
  expectTypeOf(data.team.killStreak).toEqualTypeOf<number>();
  expect(data.team.assists).toBeDefined();
  expect(data.team.assists).greaterThanOrEqual(0);
  expectTypeOf(data.team.assists).toEqualTypeOf<number>();
  expect(data.teamNormal).toBeDefined();
  expectTypeOf(data.teamNormal).toEqualTypeOf<SpeedUHCMode>();
  expect(data.teamNormal.kills).toBeDefined();
  expect(data.teamNormal.kills).greaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.kills).toEqualTypeOf<number>();
  expect(data.teamNormal.deaths).toBeDefined();
  expect(data.teamNormal.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.deaths).toEqualTypeOf<number>();
  expect(data.teamNormal.KDRatio).toBeDefined();
  expect(data.teamNormal.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.KDRatio).toEqualTypeOf<number>();
  expect(data.teamNormal.wins).toBeDefined();
  expect(data.teamNormal.wins).greaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.wins).toEqualTypeOf<number>();
  expect(data.teamNormal.losses).toBeDefined();
  expect(data.teamNormal.losses).greaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.losses).toEqualTypeOf<number>();
  expect(data.teamNormal.WLRatio).toBeDefined();
  expect(data.teamNormal.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.WLRatio).toEqualTypeOf<number>();
  expect(data.teamNormal.playedGames).toBeDefined();
  expect(data.teamNormal.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.playedGames).toEqualTypeOf<number>();
  expect(data.teamNormal.winstreak).toBeDefined();
  expect(data.teamNormal.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.winstreak).toEqualTypeOf<number>();
  expect(data.teamNormal.killStreak).toBeDefined();
  expect(data.teamNormal.killStreak).greaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.killStreak).toEqualTypeOf<number>();
  expect(data.teamNormal.assists).toBeDefined();
  expect(data.teamNormal.assists).greaterThanOrEqual(0);
  expectTypeOf(data.teamNormal.assists).toEqualTypeOf<number>();
  expect(data.teamInsane).toBeDefined();
  expectTypeOf(data.teamInsane).toEqualTypeOf<SpeedUHCMode>();
  expect(data.teamInsane.kills).toBeDefined();
  expect(data.teamInsane.kills).greaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.kills).toEqualTypeOf<number>();
  expect(data.teamInsane.deaths).toBeDefined();
  expect(data.teamInsane.deaths).greaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.deaths).toEqualTypeOf<number>();
  expect(data.teamInsane.KDRatio).toBeDefined();
  expect(data.teamInsane.KDRatio).greaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.KDRatio).toEqualTypeOf<number>();
  expect(data.teamInsane.wins).toBeDefined();
  expect(data.teamInsane.wins).greaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.wins).toEqualTypeOf<number>();
  expect(data.teamInsane.losses).toBeDefined();
  expect(data.teamInsane.losses).greaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.losses).toEqualTypeOf<number>();
  expect(data.teamInsane.WLRatio).toBeDefined();
  expect(data.teamInsane.WLRatio).greaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.WLRatio).toEqualTypeOf<number>();
  expect(data.teamInsane.playedGames).toBeDefined();
  expect(data.teamInsane.playedGames).greaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.playedGames).toEqualTypeOf<number>();
  expect(data.teamInsane.winstreak).toBeDefined();
  expect(data.teamInsane.winstreak).greaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.winstreak).toEqualTypeOf<number>();
  expect(data.teamInsane.killStreak).toBeDefined();
  expect(data.teamInsane.killStreak).greaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.killStreak).toEqualTypeOf<number>();
  expect(data.teamInsane.assists).toBeDefined();
  expect(data.teamInsane.assists).greaterThanOrEqual(0);
  expectTypeOf(data.teamInsane.assists).toEqualTypeOf<number>();
});
