import UHC from './UHC.js';
import UHCGamemode from './UHCGamemode.js';
import { expect, expectTypeOf, test } from 'vitest';
import type { UHCKits } from '../../../Types/Player.js';

test('UHC', () => {
  const data = new UHC({ stats: 'meow' });
  expect(data).toBeDefined();
  expect(data).toBeInstanceOf(UHC);
  expectTypeOf(data).toEqualTypeOf<UHC>();
  expect(data.coins).toBeDefined();
  expect(data.coins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.coins).toEqualTypeOf<number>();
  expect(data.score).toBeDefined();
  expect(data.score).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.score).toEqualTypeOf<number>();
  expect(data.kit).toBeDefined();
  expectTypeOf(data.kit).toEqualTypeOf<UHCKits | 'None'>();
  expect(data.solo).toBeDefined();
  expectTypeOf(data.solo).toEqualTypeOf<UHCGamemode>();
  expect(data.team).toBeDefined();
  expectTypeOf(data.team).toEqualTypeOf<UHCGamemode>();
  expect(data.redVsBlue).toBeDefined();
  expectTypeOf(data.redVsBlue).toEqualTypeOf<UHCGamemode>();
  expect(data.noDiamond).toBeDefined();
  expectTypeOf(data.noDiamond).toEqualTypeOf<UHCGamemode>();
  expect(data.brawl).toBeDefined();
  expectTypeOf(data.brawl).toEqualTypeOf<UHCGamemode>();
  expect(data.soloBrawl).toBeDefined();
  expectTypeOf(data.soloBrawl).toEqualTypeOf<UHCGamemode>();
  expect(data.duoBrawl).toBeDefined();
  expectTypeOf(data.duoBrawl).toEqualTypeOf<UHCGamemode>();
  expect(data.wins).toBeDefined();
  expect(data.wins).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.wins).toEqualTypeOf<number>();
  expect(data.kills).toBeDefined();
  expect(data.kills).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.kills).toEqualTypeOf<number>();
  expect(data.deaths).toBeDefined();
  expect(data.deaths).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.deaths).toEqualTypeOf<number>();
  expect(data.KDR).toBeDefined();
  expect(data.KDR).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.KDR).toEqualTypeOf<number>();
  expect(data.headsEaten).toBeDefined();
  expect(data.headsEaten).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.headsEaten).toEqualTypeOf<number>();
  expect(data.ultimatesCrafted).toBeDefined();
  expect(data.ultimatesCrafted).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.ultimatesCrafted).toEqualTypeOf<number>();
  expect(data.extraUltimatesCrafted).toBeDefined();
  expect(data.extraUltimatesCrafted).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.extraUltimatesCrafted).toEqualTypeOf<number>();
  expect(data.starLevel).toBeDefined();
  expect(data.starLevel).toBeGreaterThanOrEqual(0);
  expectTypeOf(data.starLevel).toEqualTypeOf<number>();
});
